<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:cta="http://www.certus-tech.com/xbl"
         xmlns:ctao="http://www.certus-tech.com/orbeon">

  <xbl:binding
    id="cta-field-mixin"
    element="cta|field-mixin,
             xf|input[appearance ~= field-mixin],
             xf|textarea[appearance ~= field-mixin],
             fr|tinymce[appearance ~= field-mixin],
             fr|number[appearance ~= field-mixin],
             fr|select[appearance ~= field-mixin],
             fr|select1[appearance ~= field-mixin],
             fr|dropdown-select1[appearance ~= field-mixin],
             fr|open-select1[appearance ~= field-mixin],
             fr|yesno-input[appearance ~= field-mixin],
             fr|date[appearance ~= field-mixin],
             fr|datetime[appearance ~= field-mixin]"
    xxbl:mode="binding lhha value"
    xxbl:label-for="field">

    <metadata xmlns="http://orbeon.org/oxf/xml/form-builder">
      <display-name lang="en">With mixin</display-name>
      <toolbox show="false"/>
      <icon>
        <small-icon>/apps/fr/style/images/silk/table_row_insert.png</small-icon>
      </icon>
      <templates>
        <!-- Provide a view template for Form Builder so that CSS resources are loaded -->
        <view>
          <xf:input id="" ref="" appearance="field-mixin" xmlns="">
            <xf:label ref=""/>
            <xf:hint ref=""/>
            <xf:help ref=""/>
            <xf:alert ref=""/>
          </xf:input>
        </view>
      </templates>
    </metadata>

    <xbl:handlers>
      <xbl:handler event="xforms-value-changed" ref="instance()">
        <!-- Always fires after the no change/unavailable actions. Clear available if there's a value in the field. -->
        <xf:delete if="xxf:non-blank(event('xxf:value'))" ref="xxf:binding('cta-field-mixin')/@ctao:available"/>
      </xbl:handler>
    </xbl:handlers>
    
    <!--
    <xbl:resources>
      <xbl:style src="/xbl/orbeon/field-mixin/field-mixin.css"/>
    </xbl:resources>
    -->

    <xbl:template xxbl:transform="oxf:xslt">
      <!-- This transform is applied to the control element, i.e. the input. -->
      <xsl:transform version="2.0">
        <xsl:template match="/*">
          <xf:group id="cta-mixin-group" class="cta-mixin-transform-container">
            <xf:model id="cta-mixin-internal">
              <!--
              XForms variable for the path to the bound node in the model.
              TODO: This will not work for fields in repeat sections unless it is somehow possible to get the repeat
              context information in order to build a path like section-1[4]/control-23
              -->
              <xf:var name="xf_modelpath" 
                      value="string-join(xxf:binding('cta-field-mixin')/ancestor-or-self::*[not(local-name() = 'form')]/local-name(), '/')"/>
              <!-- This instance must exist else xxf:instance appears to fail to find the (external) history. -->
              <xf:instance id="notused">
                <data/>
              </xf:instance>
              <!-- Expect history data in format compatible with the original history prototype, which presumed a
              history with multiple forms; however, only one is ever used here. -->
              <xf:bind id="cta-field-mixin-form-history-forms-bind" ref="xxf:instance('cta-form-history-instance')/form[1]">
                <!-- Binds cannot be nested any further -->
                <xf:bind id="cta-field-mixin-form-field-bind" ref="xxf:evaluate($xf_modelpath)"/>
              </xf:bind>
            </xf:model>
           
            <xh:div xsl:version="2.0" class="cta-mixin-wrapper">
              <!--
              transformed [local-name: <xsl:value-of select="local-name()"/>, @id <xsl:value-of select="@id"/>]
              attrs [<xsl:for-each select="/*/@*"><xsl:value-of select="local-name()"/>=<xsl:value-of select="."/>, </xsl:for-each>]
              -->
              <xf:var name="binding" value="xxf:binding('cta-field-mixin')"/>

              <xsl:element name="{name(/*)}">
                <xsl:attribute name="id"          select="'field'"/>
                <xsl:attribute name="ref"         select="'$binding'"/>
                <xsl:attribute name="incremental" select="'true'"/>
                <xsl:attribute name="appearance"  select="tokenize(/*/@appearance, '\s+')[. != 'field-mixin']"/>
                <xsl:copy-of select="/*/@*[not(local-name() = ('id', 'ref', 'incremental', 'bind', 'appearance'))]"/>
              </xsl:element>
              
              <xh:div class="cta-mixin-controls">
                <xf:trigger>
                  <xf:label>No change</xf:label>
                  <xf:action event="DOMActivate" fr:keep-if-design-time="false">
                    <xf:var name="old-available-attr" 
                            value="xxf:bind('cta-field-mixin-form-field-bind')/@ctao:available"/>
                    <xf:setvalue ref="xxf:binding('cta-field-mixin')" 
                                 value="xxf:bind('cta-field-mixin-form-field-bind')"/>
                    <xf:delete ref="xxf:binding('cta-field-mixin')/@ctao:available"/>
                    <!-- Preserve old ctao:available. Only works if the old field is empty because of value change handler, above. -->
                    <xf:insert if="$old-available-attr" 
                               context="xxf:binding('cta-field-mixin')" 
                               origin="xxf:attribute('ctao:available', $old-available-attr)"/>
                  </xf:action>
                </xf:trigger>
                <xf:trigger>
                  <xf:label>Not available</xf:label>
                  <xf:action event="DOMActivate" fr:keep-if-design-time="false">
                    <xf:setvalue ref="xxf:binding('cta-field-mixin')" value=""/>
                    <xf:insert context="xxf:binding('cta-field-mixin')" origin="xxf:attribute('ctao:available', 0)"/>
                  </xf:action>
                </xf:trigger>
              </xh:div>
            </xh:div>
          </xf:group>
        </xsl:template>
      </xsl:transform>
    </xbl:template>
  </xbl:binding>
</xbl:xbl>
