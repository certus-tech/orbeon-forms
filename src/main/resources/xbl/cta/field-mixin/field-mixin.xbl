<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:cta="http://www.certus-tech.com/xbl"
         xmlns:ctao="http://www.certus-tech.com/orbeon">

  <!-- @xxbl:mode binding means orbeon will pass in an actual binding, with the @id below, allowing this control to bind to the form's model. -->
  <xbl:binding id="cta-field-mixin" element="cta|field-mixin" xxbl:mode="custom-lhha binding value">
    
    <metadata xmlns="http://orbeon.org/oxf/xml/form-builder">
      <display-name lang="en">Field mixin</display-name>
      <icon lang="en">
        <small-icon>/apps/fr/style/images/silk/table_row_insert.png</small-icon>
        <large-icon>/apps/fr/style/images/silk/table_row_insert.png</large-icon>
      </icon>
      <!-- 
        @control is the ID of the control this history is for e.g. @control-1
        @modelpath is the path within the xform model to (but not including) @control, e.g. section-1/section-2
        @bind is populated automatically by orbeon when this control is created, see @xxbl:mode, above
      -->
      <templates>
        <view>
          <cta:field-mixin control="" bind="" modelpath=""/>
        </view>
      </templates>
    </metadata>
    
    <xbl:handlers>
      <!-- xxforms-value-changed does not fire, so the value must be obtained by looking at the field. -->
      <xbl:handler event="xforms-value-changed" ref="instance()">
        <xf:setvalue if="string(event('xxf:value')) != ''" ref="xxf:binding('cta-field-mixin')/@ctao:available" value="1"/>
      </xbl:handler>
    </xbl:handlers>
    
    <!--
    <xbl:resources>
      <xbl:style src="/xbl/cta/field-history/field-history.css"/>
    </xbl:resources>
    -->
    
    <xbl:template xxbl:transform="oxf:xslt">
      <xsl:transform version="2.0">
        <xsl:template match="/*">
          <!-- XSL variable for the full path to the field's value in the models -->
          <!-- something like section-1/section-2/control-1 -->
          <!-- TODO: This approach can be revised. We could ditch modelpath and assume a flat model using control IDs.
          In this case the modelpath attribute on the bound element is not required, nor is $modelpath. -->
          <xsl:variable name="modelpath" select="string-join((@modelpath, @control), '/')"/>
          <xf:group id="cta-mixin-group" class="cta-mixin-transform-container">
            
            <!-- This model is in the template and not in the xbl:implementation (omitted), following the example of
            autocomplete.xbl -->
            <xf:model id="cta-mixin-internal">
              <!-- This instance must exist else xxf:instance appears to fail to find the (external) history. -->
              <xf:instance id="notused">
                <data/>
              </xf:instance>
              <!-- N.b. uses the same instance as the field-history instance, but only the first form. -->
              <xf:bind id="cta-field-mixin-form-history-forms-bind" ref="xxf:instance('cta-form-history-instance')/form[1]">
                <!-- The binds cannot be nested any further -->
                <!--<xf:bind id="cta-form-historymeta-id-bind" ref="@id"/>-->
                <xf:bind id="cta-field-mixin-form-date-bind" ref="@date"/>
                <xf:bind id="cta-field-mixin-form-field-bind">
                  <xsl:attribute name="ref" select="$modelpath"/>
                </xf:bind>
              </xf:bind>
            </xf:model>
            
            <xh:div class="cta-mixin-transform-container">
              <xh:ul class="cta-mixin-controls">
                <xh:li>
                  <xh:span>use previous value </xh:span>
                  <xh:span>
                    <xf:output bind="cta-field-mixin-form-field-bind"/>
                  </xh:span>
                  <xh:span> from </xh:span>
                  <xh:span>
                    <xf:output bind="cta-field-mixin-form-date-bind"/>
                  </xh:span>
                  <xf:trigger>
                    <xf:label>this</xf:label>
                    <xf:action event="DOMActivate">
                      <xf:setvalue ref="xxf:binding('cta-field-mixin')" value="xxf:bind('cta-field-mixin-form-field-bind')"/>
                    </xf:action>
                  </xf:trigger>
                </xh:li>
                <xh:li>
                  <xh:span>unable to provide a value</xh:span>                  
                  <xh:span>
                    <xf:output ref="xxf:binding('cta-field-mixin')/@ctao:available"/>
                  </xh:span>
                  <xf:trigger>
                    <xf:label>this3</xf:label>
                    <xf:action event="DOMActivate">
                      <!-- this @refs the binding on THIS control i.e. the mixin control  -->
                      <xf:setvalue ref="xxf:binding('cta-field-mixin')" value=""/>
                      <xf:setvalue ref="xxf:binding('cta-field-mixin')/@ctao:available" value="0"/>
                    </xf:action>
                  </xf:trigger>
                </xh:li>
              </xh:ul>
            </xh:div>
          </xf:group>
        </xsl:template>
      </xsl:transform>
    </xbl:template>
  </xbl:binding>
</xbl:xbl>
